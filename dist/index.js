"use strict";var y=Object.create;var s=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var A=Object.getOwnPropertyNames,c=Object.getOwnPropertySymbols,O=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty,h=Object.prototype.propertyIsEnumerable;var f=(r,e,o)=>e in r?s(r,e,{enumerable:!0,configurable:!0,writable:!0,value:o}):r[e]=o,l=(r,e)=>{for(var o in e||(e={}))u.call(e,o)&&f(r,o,e[o]);if(c)for(var o of c(e))h.call(e,o)&&f(r,o,e[o]);return r};var x=(r,e)=>{for(var o in e)s(r,o,{get:e[o],enumerable:!0})},g=(r,e,o,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let t of A(e))!u.call(r,t)&&t!==o&&s(r,t,{get:()=>e[t],enumerable:!(n=C(e,t))||n.enumerable});return r};var v=(r,e,o)=>(o=r!=null?y(O(r)):{},g(e||!r||!r.__esModule?s(o,"default",{value:r,enumerable:!0}):o,r)),T=r=>g(s({},"__esModule",{value:!0}),r);var w={};x(w,{default:()=>d});module.exports=T(w);var p=v(require("javascript-obfuscator"));var P={excludes:[],enable:!0,log:!0,options:{compact:!0,controlFlowFlattening:!0,controlFlowFlatteningThreshold:1,deadCodeInjection:!1,debugProtection:!1,debugProtectionInterval:0,disableConsoleOutput:!1,identifierNamesGenerator:"hexadecimal",log:!1,numbersToExpressions:!1,renameGlobals:!1,selfDefending:!0,simplify:!0,splitStrings:!1,stringArray:!1,stringArrayCallsTransform:!1,stringArrayCallsTransformThreshold:.5,stringArrayEncoding:[],stringArrayIndexShift:!0,stringArrayRotate:!0,stringArrayShuffle:!0,stringArrayWrappersCount:1,stringArrayWrappersChainedCalls:!0,stringArrayWrappersParametersMaxCount:2,stringArrayWrappersType:"variable",stringArrayThreshold:.75,unicodeEscapeSequence:!1}};function d(r){let e=l(l({},P),r);return{name:"vite-plugin-bundle-obfuscator",transformIndexHtml:{enforce:"post",transform(o,{bundle:n}){if(!e.enable||!n)return o;let t=performance.now();console.log("Starting obfuscation process..."),Object.entries(n).forEach(([i,a])=>{"code"in a&&a.code&&e.excludes.every(m=>!i.includes(m))&&(e.log&&console.log(`Obfuscating ${i}...`),a.code=p.default.obfuscate(a.code,e.options).getObfuscatedCode(),e.log&&console.log(`Obfuscation complete for ${i}`))});let b=(performance.now()-t)/1e3;return console.log("Obfuscation process completed in"+b.toFixed(1)+"s"),o}}}}
