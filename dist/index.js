"use strict";var w=Object.create;var s=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var H=Object.getOwnPropertyNames,p=Object.getOwnPropertySymbols,O=Object.getPrototypeOf,d=Object.prototype.hasOwnProperty,P=Object.prototype.propertyIsEnumerable;var u=(r,o,e)=>o in r?s(r,o,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[o]=e,c=(r,o)=>{for(var e in o||(o={}))d.call(o,e)&&u(r,e,o[e]);if(p)for(var e of p(o))P.call(o,e)&&u(r,e,o[e]);return r};var F=(r,o)=>{for(var e in o)s(r,e,{get:o[e],enumerable:!0})},m=(r,o,e,t)=>{if(o&&typeof o=="object"||typeof o=="function")for(let n of H(o))!d.call(r,n)&&n!==e&&s(r,n,{get:()=>o[n],enumerable:!(t=T(o,n))||t.enumerable});return r};var y=(r,o,e)=>(e=r!=null?w(O(r)):{},m(o||!r||!r.__esModule?s(e,"default",{value:r,enumerable:!0}):e,r)),_=r=>m(s({},"__esModule",{value:!0}),r);var E={};F(E,{default:()=>C});module.exports=_(E);var a=y(require("vite")),v=y(require("javascript-obfuscator"));var l=class{constructor(o){this.show=o;this._log=o?console.log.bind(console):this.noop}noop(o){}alwaysLog(o){console.log(o)}info(o){this._log(o)}},b={excludes:[],enable:!0,log:!0,options:{compact:!0,controlFlowFlattening:!0,controlFlowFlatteningThreshold:1,deadCodeInjection:!1,debugProtection:!1,debugProtectionInterval:0,disableConsoleOutput:!1,identifierNamesGenerator:"hexadecimal",log:!1,numbersToExpressions:!1,renameGlobals:!1,selfDefending:!0,simplify:!0,splitStrings:!1,stringArray:!1,stringArrayCallsTransform:!1,stringArrayCallsTransformThreshold:.5,stringArrayEncoding:[],stringArrayIndexShift:!0,stringArrayRotate:!0,stringArrayShuffle:!0,stringArrayWrappersCount:1,stringArrayWrappersChainedCalls:!0,stringArrayWrappersParametersMaxCount:2,stringArrayWrappersType:"variable",stringArrayThreshold:.75,unicodeEscapeSequence:!1}};function j(){return a!=null&&a.version?Number(a.version.split(".")[0]):2}function C(r){let o=c(c({},b),r),e=new l(o.log),t=(n,{bundle:g})=>{if(!o.enable||!g)return n;let h=performance.now();e.alwaysLog("starting obfuscation process..."),Object.entries(g).forEach(([f,i])=>{"code"in i&&i.code&&o.excludes.every(A=>!f.includes(A))&&(e.info(`obfuscating ${f}...`),i.code=v.default.obfuscate(i.code,o.options).getObfuscatedCode(),e.info(`obfuscation complete for ${f}.`))});let x=(performance.now()-h)/1e3;return e.alwaysLog("\u2713 obfuscation process completed in "+x.toFixed(1)+"s."),n};return{name:"vite-plugin-bundle-obfuscator",transformIndexHtml:j()>=5?{order:"post",handler:t}:{enforce:"post",transform:t}}}
